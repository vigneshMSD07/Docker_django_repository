#docker compose is used to run multiple container services on a single go and alos container can be linked together
#the containers inside the compose can communicate with each other regardless of their host network

version : '3.1'

services:
  mysql:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: hellovikky
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    ports:
      - "1004:8080"
      - "1005:8080"
    environment:
      PYTHONVAR: welcome


#docker compose can be used to build our own docker file
Step 1:
Create a dockerfile

Step 2:
create a dockercompose file to run the created docker file
version: "3.1"

services:
  vv_vv:
    build: .(This will build image from the docker file in the current directory or we have to specify the path of image)
    environment:
      TEST_PATH: /home
    volumes:
      - vk18:/home


volumes:
  vk18:
    driver: local



# if we want the  compose to take all the changes we made after the services are running
then use below command each time:
docker-compose up -d --build

docker-compose build command will run all the compose file which are all havig buildcommand.

docker-compose build <service_name> used to build particular service.


example 2:
version: "3.2"

services:
  vikky:
    build: .
    environment:
      PYTHON_PATH: /home/test
    volumes:
      - type: bind(volume is the local dir)
        source:
        target:
        
   vikky1:
       vikky:
    build: .
    environment:
      PYTHON_PATH: /home/test
    volumes:
      - type: volume(volume is the docker volume created)
        source:
        target:
        
        
volumes:
  volume_name:
